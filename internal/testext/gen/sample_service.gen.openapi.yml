# Code generated by Abide - DO NOT EDIT.
#
#   Timestamp: Tue, 11 Jul 2023 10:09:24 EDT
#   Source:    sample_service.go
#   Generator: https:#github.com/monadicstack/abide
#
openapi: 3.0.0
info:
    title: SampleService
    version: "0.0.1"

servers:
    - url: /v2

paths:
    
    
    
    
    
    "/SampleService.Authorization":
        post:
            description: > 
                Authorization regurgitates the "Authorization" metadata/header.
            

            
            requestBody:
                content:
                     application/json:
                         schema:
                             $ref: '#/components/schemas/SampleRequest'
            

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleResponse'
    
    
    
    
    
    "/SampleService.ComplexValues":
        post:
            description: > 
                ComplexValues flexes our ability to encode/decode non-flat structs.
            

            
            requestBody:
                content:
                     application/json:
                         schema:
                             $ref: '#/components/schemas/SampleComplexRequest'
            

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleComplexResponse'
    
    
    
    
    
    "/complex/values/{InUser.ID}/{InUser.Name}/woot":
        get:
            description: > 
                ComplexValuesPath flexes our ability to encode/decode non-flat structs while
                specifying them via path and query string.
            
            parameters:
                
                - in: path
                  name: InUser.ID
                  required: true
                  
                  description:  > 
                      ID is a string value that will likely have no whitespace.
                  
                  schema:
                      type: string
                
                - in: path
                  name: InUser.Name
                  required: true
                  
                  description:  > 
                      Name is a string value that will likely have spaces.
                  
                  schema:
                      type: string
                
                
                - in: query
                  name: InUser
                  
                  schema:
                      type: object
                
                - in: query
                  name: InFlag
                  
                  schema:
                      type: boolean
                
                - in: query
                  name: InFloat
                  
                  schema:
                      type: number
                
                - in: query
                  name: InTime
                  
                  schema:
                      type: object
                
                - in: query
                  name: InTimePtr
                  
                  schema:
                      type: object
                
            

            

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleComplexResponse'
    
    
    
    
    
    "/custom/route/1/{ID}/{Text}":
        get:
            description: > 
                CustomRoute performs a service operation where you override default behavior
                by providing routing-related Doc Options.
            
            parameters:
                
                - in: path
                  name: ID
                  required: true
                  
                  schema:
                      type: string
                
                - in: path
                  name: Text
                  required: true
                  
                  schema:
                      type: string
                
                
            

            

            responses:
                202:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleResponse'
    
    
    
    
    
    "/custom/route/3/{ID}":
        put:
            description: > 
                CustomRouteBody performs a service operation where you override default behavior
                by providing routing-related Doc Options, but rely on body encoding rather than path.
            
            parameters:
                
                - in: path
                  name: ID
                  required: true
                  
                  schema:
                      type: string
                
                
            

            
            requestBody:
                content:
                     application/json:
                         schema:
                             $ref: '#/components/schemas/SampleRequest'
            

            responses:
                201:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleResponse'
    
    
    
    
    
    "/custom/route/2/{ID}":
        get:
            description: > 
                CustomRouteQuery performs a service operation where you override default behavior
                by providing routing-related Doc Options. The input data relies on the path
            
            parameters:
                
                - in: path
                  name: ID
                  required: true
                  
                  schema:
                      type: string
                
                
                - in: query
                  name: Text
                  
                  schema:
                      type: string
                
            

            

            responses:
                202:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleResponse'
    
    
    
    
    
    "/SampleService.Defaults":
        post:
            description: > 
                Defaults simply utilizes all of the framework's default behaviors.
            

            
            requestBody:
                content:
                     application/json:
                         schema:
                             $ref: '#/components/schemas/SampleRequest'
            

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleResponse'
    
    
    
    
    
    "/download":
        get:
            description: > 
                Download results in a raw stream of data rather than relying on auto-encoding
                the response value.
            
            parameters:
                
                
                - in: query
                  name: Format
                  
                  schema:
                      type: string
                
            

            

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleDownloadResponse'
    
    
    
    
    
    "/download/resumable":
        get:
            description: > 
                DownloadResumable results in a raw stream of data rather than relying on auto-encoding
                the response value. The stream includes Content-Range info as though you could resume
                your stream/download progress later.
            
            parameters:
                
                
                - in: query
                  name: Format
                  
                  schema:
                      type: string
                
            

            

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleDownloadResponse'
    
    
    
    
    
    "/SampleService.Fail4XX":
        post:
            description: > 
                Fail4XX always returns a non-nil 400-series error.
            

            
            requestBody:
                content:
                     application/json:
                         schema:
                             $ref: '#/components/schemas/SampleRequest'
            

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleResponse'
    
    
    
    
    
    "/SampleService.Fail5XX":
        post:
            description: > 
                Fail5XX always returns a non-nil 500-series error.
            

            
            requestBody:
                content:
                     application/json:
                         schema:
                             $ref: '#/components/schemas/SampleRequest'
            

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleResponse'
    
    
    
    
    
    "/ListenerA/Woot":
        get:
            description: > 
                ListenerA fires on only one of the triggers.
            
            parameters:
                
                
                - in: query
                  name: ID
                  
                  schema:
                      type: string
                
                - in: query
                  name: Text
                  
                  schema:
                      type: string
                
            

            

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleResponse'
    
    
     
    
     
    
    
    
    
    "/redirect":
        get:
            description: > 
                Redirect results in a 307-style redirect to the Download endpoint.
            

            

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleRedirectResponse'
    
    
    
    
    
    "/SampleService.SecureWithRoles":
        post:
            description: > 
                SecureWithRoles lets us test role based security by looking at the 'roles' doc option.
            

            
            requestBody:
                content:
                     application/json:
                         schema:
                             $ref: '#/components/schemas/SampleSecurityRequest'
            

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleSecurityResponse'
    
    
    
    
    
    "/SampleService.Sleep":
        post:
            description: > 
                Sleep successfully responds, but it will sleep for 5 seconds before doing so. Use this
                for test cases where you want to try out timeouts.
            

            
            requestBody:
                content:
                     application/json:
                         schema:
                             $ref: '#/components/schemas/SampleRequest'
            

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleResponse'
    
    
    
    
    
    "/SampleService.TriggerFailure":
        post:
            description: > 
                
            

            
            requestBody:
                content:
                     application/json:
                         schema:
                             $ref: '#/components/schemas/SampleRequest'
            

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleResponse'
    
    
    
    
    
    "/SampleService.TriggerLowerCase":
        post:
            description: > 
                
            

            
            requestBody:
                content:
                     application/json:
                         schema:
                             $ref: '#/components/schemas/SampleRequest'
            

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleResponse'
    
    
    
    
    
    "/Upper/Case/WootyAndTheBlowfish":
        get:
            description: > 
                TriggerUpperCase ensures that events still fire as "SampleService.TriggerUpperCase" even though
                we are going to set a different HTTP path.
            
            parameters:
                
                
                - in: query
                  name: ID
                  
                  schema:
                      type: string
                
                - in: query
                  name: Text
                  
                  schema:
                      type: string
                
            

            

            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SampleResponse'
    

components:
    schemas:
        
        time.Duration:
            type: number
            
        
        SampleDownloadRequest:
            type: object
            
            properties:
                
                Format:
                    type: string
                    
                    
                    
                
            
        
        MarshalToObject:
            type: object
            
            properties:
                
                Home:
                    type: string
                    
                    
                    description: > 
                        Home is supposed to be a home email address.
                    
                
                Work:
                    type: string
                    
                    
                    description: > 
                        Work is supposed to be a home email address.
                    
                
            
        
        SampleComplexRequest:
            type: object
            
            properties:
                
                InUser:
                    
                    $ref: "#/components/schemas/SampleUser"
                    
                    
                
                InFlag:
                    type: boolean
                    
                    
                    
                
                InFloat:
                    type: number
                    
                    
                    
                
                InTime:
                    
                    $ref: "#/components/schemas/time.Time"
                    
                    
                
                InTimePtr:
                    
                    $ref: "#/components/schemas/time.Time"
                    
                    
                
            
        
        time.Time:
            type: object
            
        
        SampleComplexResponse:
            type: object
            
            properties:
                
                OutFlag:
                    type: boolean
                    
                    
                    
                
                OutFloat:
                    type: number
                    
                    
                    
                
                OutUser:
                    
                    $ref: "#/components/schemas/SampleUser"
                    
                    
                
                OutTime:
                    
                    $ref: "#/components/schemas/time.Time"
                    
                    
                
                OutTimePtr:
                    
                    $ref: "#/components/schemas/time.Time"
                    
                    
                
            
        
        SampleRequest:
            type: object
            
            properties:
                
                ID:
                    type: string
                    
                    
                    
                
                Text:
                    type: string
                    
                    
                    
                
            
        
        CustomDuration:
            type: number
            
        
        MarshalToString:
            type: object
            
            properties:
                
                Home:
                    type: string
                    
                    
                    description: > 
                        Home is supposed to be a home email address.
                    
                
                Work:
                    type: string
                    
                    
                    description: > 
                        Work is supposed to be a home email address.
                    
                
            
        
        SampleSecurityResponse:
            type: object
            
            properties:
                
                Roles:
                    type: array
                    
                    
                    items:
                        type: string
                        
                    
                    
                
            
        
        SampleResponse:
            type: object
            
            properties:
                
                ID:
                    type: string
                    
                    
                    
                
                Text:
                    type: string
                    
                    
                    
                
            
        
        SampleRedirectRequest:
            type: object
            
        
        SampleRedirectResponse:
            type: object
            
            properties:
                
                URI:
                    type: string
                    
                    
                    
                
            
        
        SampleDownloadResponse:
            type: object
            
        
        SampleUser:
            type: object
            
            properties:
                
                ID:
                    type: string
                    
                    
                    description: > 
                        ID is a string value that will likely have no whitespace.
                    
                
                Name:
                    type: string
                    
                    
                    description: > 
                        Name is a string value that will likely have spaces.
                    
                
                Age:
                    type: number
                    
                    
                    description: > 
                        Age is a numeric value that we should support.
                    
                
                Attention:
                    
                    $ref: "#/components/schemas/time.Duration"
                    
                    description: > 
                        Attention is a duration to ensure that we use epoch nanos as the format, NOT the string.
                    
                
                AttentionString:
                    
                    $ref: "#/components/schemas/CustomDuration"
                    
                    description: > 
                        AttentionString is a custom duration alias that overrides MarshalJSON/UnmarshalJSON to use strings for transport.
                    
                
                Digits:
                    type: string
                    
                    
                    description: > 
                        PhoneNumber exercises the notion that clients should refer to this field as Digits, not PhoneNumber.
                    
                
                MarshalToString:
                    
                    $ref: "#/components/schemas/MarshalToString"
                    
                    description: > 
                        MarshalToString makes sure that we can use strings as an alternate JSON format for structs.
                    
                
                MarshalToObject:
                    
                    $ref: "#/components/schemas/MarshalToObject"
                    
                    description: > 
                        MarshalToString makes sure that we can use custom marshaling of struct values.
                        This is NOT globally supported in all client languages - just Go for now.
                    
                
            
        
        SampleSecurityRequest:
            type: object
            
            properties:
                
                ID:
                    type: string
                    
                    
                    
                
                User:
                    
                    $ref: "#/components/schemas/SampleUser"
                    
                    
                
            
        
